/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINSCREENVIEWBASE_HPP
#define MAINSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/Template.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/progress_indicators/LineProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/containers/Slider.hpp>

class MainScreenViewBase : public touchgfx::View<MainScreenPresenter>
{
public:
    MainScreenViewBase();
    virtual ~MainScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void function6()
    {
        // Override and implement this function in MainScreen
    }
    virtual void function9()
    {
        // Override and implement this function in MainScreen
    }
    virtual void function12()
    {
        // Override and implement this function in MainScreen
    }
    virtual void function3()
    {
        // Override and implement this function in MainScreen
    }
    virtual void volumeConfirmed(int value)
    {
        // Override and implement this function in MainScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Container BackGroundAndTitle;
    Template template1;
    touchgfx::TextArea Title;
    touchgfx::Container MusicPlayer;
    touchgfx::ButtonWithLabel ButtPause;
    touchgfx::LineProgress ProgressMusic;
    touchgfx::PainterRGB565Bitmap ProgressMusicPainter;
    touchgfx::ButtonWithLabel ButtBefore;
    touchgfx::ButtonWithLabel ButtNext;
    touchgfx::Box backgroundVolume;
    touchgfx::ButtonWithIcon ButtVolume;
    touchgfx::Slider volumeSlider;
    touchgfx::ButtonWithIcon ButtSettings;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainScreenViewBase, const touchgfx::Slider&, int> sliderValueConfirmedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // MAINSCREENVIEWBASE_HPP
