/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ECUALIZADORMENUVIEWBASE_HPP
#define ECUALIZADORMENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/ecualizadormenu_screen/EcualizadorMenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/Template.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/containers/HomeAndBack.hpp>
#include <touchgfx/widgets/graph/Graph.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class EcualizadorMenuViewBase : public touchgfx::View<EcualizadorMenuPresenter>
{
public:
    EcualizadorMenuViewBase();
    virtual ~EcualizadorMenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Container BackGroundAndTitle;
    Template template1;
    touchgfx::TextArea Title;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::ButtonWithLabel ButtEdit;
    HomeAndBack homeAndBack1;
    touchgfx::Graph<104> GraphEcualizador;
    touchgfx::GraphElementGridY GraphEcualizadorMajorYAxisGrid;
    touchgfx::GraphElementLine GraphEcualizadorLine1;
    touchgfx::PainterRGB565 GraphEcualizadorLine1Painter;
    touchgfx::GraphElementArea GraphEcualizadorArea1;
    touchgfx::PainterRGB565 GraphEcualizadorArea1Painter;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<EcualizadorMenuViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ECUALIZADORMENUVIEWBASE_HPP
