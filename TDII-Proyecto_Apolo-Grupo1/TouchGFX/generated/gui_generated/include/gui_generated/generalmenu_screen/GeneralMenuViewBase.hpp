/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GENERALMENUVIEWBASE_HPP
#define GENERALMENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/generalmenu_screen/GeneralMenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <gui/containers/Template.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <gui/containers/HomeAndBack.hpp>
#include <touchgfx/containers/Slider.hpp>

class GeneralMenuViewBase : public touchgfx::View<GeneralMenuPresenter>
{
public:
    GeneralMenuViewBase();
    virtual ~GeneralMenuViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void GFXTipoSistemaChange()
    {
        // Override and implement this function in GeneralMenu
    }
    virtual void GFXCambioEcualizador()
    {
        // Override and implement this function in GeneralMenu
    }
    virtual void GFXVolumenMaximoChange(int value)
    {
        // Override and implement this function in GeneralMenu
    }
    virtual void GFXChangeLoudnessState()
    {
        // Override and implement this function in GeneralMenu
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Container BackGroundAndTitle;
    Template template1;
    touchgfx::TextArea Title;
    touchgfx::TextArea LabelEstadoCanal;
    touchgfx::ToggleButton TogEstadoLoudness;
    touchgfx::TextArea LabelCrossOver;
    touchgfx::ButtonWithLabel ButtSistema;
    touchgfx::TextArea LabelCanalAudio;
    touchgfx::ButtonWithLabel ButtEc;
    HomeAndBack homeAndBack1;
    touchgfx::TextArea LabelVolumenCanal;
    touchgfx::Slider sliderVolumenMaximo;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GeneralMenuViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<GeneralMenuViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // GENERALMENUVIEWBASE_HPP
