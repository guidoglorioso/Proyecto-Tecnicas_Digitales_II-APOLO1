/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/canalesmenu_screen/CanalesMenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

CanalesMenuViewBase::CanalesMenuViewBase() :
    buttonCallback(this, &CanalesMenuViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &CanalesMenuViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackGroundAndTitle.setPosition(0, 0, 480, 320);
    template1.setXY(0, 1);
    BackGroundAndTitle.add(template1);

    Title.setXY(86, 0);
    Title.setColor(touchgfx::Color::getColorFromRGB(255, 227, 216));
    Title.setLinespacing(0);
    Title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JH9L));
    BackGroundAndTitle.add(Title);

    add(BackGroundAndTitle);

    sliderVolume.setXY(230, 137);
    sliderVolume.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_FILLER_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_ROUNDED_DARK_ID));
    sliderVolume.setupHorizontalSlider(12, 9, 0, 0, 200);
    sliderVolume.setValueRange(0, 100);
    sliderVolume.setValue(0);
    sliderVolume.setNewValueCallback(sliderValueChangedCallback);
    add(sliderVolume);

    ButtCanalSalidaSelec.setXY(282, 43);
    ButtCanalSalidaSelec.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtCanalSalidaSelec.setLabelText(touchgfx::TypedText(T_CANAL0_CONFIGCANAL));
    ButtCanalSalidaSelec.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtCanalSalidaSelec.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtCanalSalidaSelec.setAction(buttonCallback);
    add(ButtCanalSalidaSelec);

    homeAndBack1.setXY(0, 253);
    add(homeAndBack1);

    ButtCanalAudio.setXY(282, 222);
    ButtCanalAudio.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtCanalAudio.setLabelText(touchgfx::TypedText(T_DERECHO_CONFIGCANAL));
    ButtCanalAudio.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtCanalAudio.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtCanalAudio.setAction(buttonCallback);
    add(ButtCanalAudio);

    LabelCanalAudio.setXY(66, 228);
    LabelCanalAudio.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    LabelCanalAudio.setLinespacing(0);
    LabelCanalAudio.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T4X7));
    add(LabelCanalAudio);

    ButtEditarCrossOver.setXY(282, 177);
    ButtEditarCrossOver.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtEditarCrossOver.setLabelText(touchgfx::TypedText(T_EDITAR));
    ButtEditarCrossOver.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtEditarCrossOver.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtEditarCrossOver.setAction(buttonCallback);
    add(ButtEditarCrossOver);

    LabelCanalSalida.setXY(69, 36);
    LabelCanalSalida.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    LabelCanalSalida.setLinespacing(0);
    LabelCanalSalida.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5H77));
    add(LabelCanalSalida);

    LabelVolumenCanal.setXY(70, 135);
    LabelVolumenCanal.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    LabelVolumenCanal.setLinespacing(0);
    LabelVolumenCanal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XYXR));
    add(LabelVolumenCanal);

    LabelCrossOver.setXY(69, 183);
    LabelCrossOver.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    LabelCrossOver.setLinespacing(0);
    LabelCrossOver.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4ZEJ));
    add(LabelCrossOver);

    LabelEstadoCanal.setXY(69, 95);
    LabelEstadoCanal.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    LabelEstadoCanal.setLinespacing(0);
    LabelEstadoCanal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0Y1V));
    add(LabelEstadoCanal);

    TogEstadoCanal.setXY(300, 90);
    TogEstadoCanal.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_SMALL_ROUND_SMALL_ON_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_SMALL_ROUND_SMALL_OFF_LIGHT_ID));
    TogEstadoCanal.setAction(buttonCallback);
    add(TogEstadoCanal);
}

CanalesMenuViewBase::~CanalesMenuViewBase()
{

}

void CanalesMenuViewBase::setupScreen()
{
    template1.initialize();
    homeAndBack1.initialize();
}

void CanalesMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ButtCanalSalidaSelec)
    {
        //Interaction1
        //When ButtCanalSalidaSelec clicked call virtual function
        //Call GFXCanalSelec
        GFXCanalSelec();
    }
    if (&src == &TogEstadoCanal)
    {
        //Interaction2
        //When TogEstadoCanal clicked call virtual function
        //Call GFXEstadoCanal
        GFXEstadoCanal();
    }
    if (&src == &ButtEditarCrossOver)
    {
        //Interaction4
        //When ButtEditarCrossOver clicked change screen to CrossOverMenu
        //Go to CrossOverMenu with no screen transition
        application().gotoCrossOverMenuScreenNoTransition();
    }
    if (&src == &ButtCanalAudio)
    {
        //Interaction5
        //When ButtCanalAudio clicked call virtual function
        //Call GFXCanalAudio
        GFXCanalAudio();
    }
}

void CanalesMenuViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderVolume)
    {
        //Interaction3
        //When sliderVolume value changed call virtual function
        //Call GFXVolumenCanalSelec
        GFXVolumenCanalSelec(value);
    }
}
