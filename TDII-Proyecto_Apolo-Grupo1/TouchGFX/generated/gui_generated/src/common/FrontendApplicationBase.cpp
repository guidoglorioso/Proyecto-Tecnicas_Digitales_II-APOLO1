/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <gui/mainscreen_screen/MainScreenView.hpp>
#include <gui/mainscreen_screen/MainScreenPresenter.hpp>
#include <gui/settings1_screen/Settings1View.hpp>
#include <gui/settings1_screen/Settings1Presenter.hpp>
#include <gui/ecualizadormenu_screen/EcualizadorMenuView.hpp>
#include <gui/ecualizadormenu_screen/EcualizadorMenuPresenter.hpp>
#include <gui/editarecualizador_screen/EditarEcualizadorView.hpp>
#include <gui/editarecualizador_screen/EditarEcualizadorPresenter.hpp>
#include <gui/entradamenu_screen/EntradaMenuView.hpp>
#include <gui/entradamenu_screen/EntradaMenuPresenter.hpp>
#include <gui/canalesmenu_screen/CanalesMenuView.hpp>
#include <gui/canalesmenu_screen/CanalesMenuPresenter.hpp>
#include <gui/crossovermenu_screen/CrossOverMenuView.hpp>
#include <gui/crossovermenu_screen/CrossOverMenuPresenter.hpp>
#include <gui/generalmenu_screen/GeneralMenuView.hpp>
#include <gui/generalmenu_screen/GeneralMenuPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
}

/*
 * Screen Transition Declarations
 */

// MainScreen

void FrontendApplicationBase::gotoMainScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMainScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<MainScreenView, MainScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// Settings1

void FrontendApplicationBase::gotoSettings1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoSettings1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoSettings1ScreenNoTransitionImpl()
{
    touchgfx::makeTransition<Settings1View, Settings1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// EcualizadorMenu

void FrontendApplicationBase::gotoEcualizadorMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEcualizadorMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoEcualizadorMenuScreenNoTransitionImpl()
{
    touchgfx::makeTransition<EcualizadorMenuView, EcualizadorMenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// EditarEcualizador

void FrontendApplicationBase::gotoEditarEcualizadorScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEditarEcualizadorScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoEditarEcualizadorScreenNoTransitionImpl()
{
    touchgfx::makeTransition<EditarEcualizadorView, EditarEcualizadorPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// EntradaMenu

void FrontendApplicationBase::gotoEntradaMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoEntradaMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoEntradaMenuScreenNoTransitionImpl()
{
    touchgfx::makeTransition<EntradaMenuView, EntradaMenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// CanalesMenu

void FrontendApplicationBase::gotoCanalesMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCanalesMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCanalesMenuScreenNoTransitionImpl()
{
    touchgfx::makeTransition<CanalesMenuView, CanalesMenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// CrossOverMenu

void FrontendApplicationBase::gotoCrossOverMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoCrossOverMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoCrossOverMenuScreenNoTransitionImpl()
{
    touchgfx::makeTransition<CrossOverMenuView, CrossOverMenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// GeneralMenu

void FrontendApplicationBase::gotoGeneralMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoGeneralMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoGeneralMenuScreenNoTransitionImpl()
{
    touchgfx::makeTransition<GeneralMenuView, GeneralMenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
