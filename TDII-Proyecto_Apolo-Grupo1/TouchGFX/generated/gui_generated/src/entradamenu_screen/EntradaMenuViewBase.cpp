/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/entradamenu_screen/EntradaMenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

EntradaMenuViewBase::EntradaMenuViewBase() :
    buttonCallback(this, &EntradaMenuViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &EntradaMenuViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackGroundAndTitle.setPosition(0, 0, 480, 320);
    template1.setXY(0, 0);
    BackGroundAndTitle.add(template1);

    Title.setXY(123, 0);
    Title.setColor(touchgfx::Color::getColorFromRGB(255, 227, 216));
    Title.setLinespacing(0);
    Title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LFYS));
    BackGroundAndTitle.add(Title);

    add(BackGroundAndTitle);

    LabelVolumenCanal_1.setXY(37, 147);
    LabelVolumenCanal_1.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    LabelVolumenCanal_1.setLinespacing(0);
    LabelVolumenCanal_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1Q3C));
    add(LabelVolumenCanal_1);

    sliderBalance.setXY(222, 148);
    sliderBalance.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_TRACK_SMALL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_ROUNDED_DARK_ID));
    sliderBalance.setupHorizontalSlider(12, 9, 0, 0, 200);
    sliderBalance.setValueRange(-50, 50);
    sliderBalance.setValue(0);
    sliderBalance.setNewValueCallback(sliderValueChangedCallback);
    add(sliderBalance);

    ButtEntradaAudio.setXY(290, 49);
    ButtEntradaAudio.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtEntradaAudio.setLabelText(touchgfx::TypedText(T_AUX_INAUDIO));
    ButtEntradaAudio.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtEntradaAudio.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtEntradaAudio.setAction(buttonCallback);
    add(ButtEntradaAudio);

    EntradaAudioLabel_1.setXY(37, 60);
    EntradaAudioLabel_1.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    EntradaAudioLabel_1.setLinespacing(0);
    EntradaAudioLabel_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P180));
    add(EntradaAudioLabel_1);

    ButtCanalAudioIN.setXY(290, 99);
    ButtCanalAudioIN.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtCanalAudioIN.setLabelText(touchgfx::TypedText(T_ESTEREO_INAUDIO));
    ButtCanalAudioIN.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtCanalAudioIN.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtCanalAudioIN.setAction(buttonCallback);
    add(ButtCanalAudioIN);

    CanalAudioLabel.setXY(37, 105);
    CanalAudioLabel.setColor(touchgfx::Color::getColorFromRGB(0, 34, 89));
    CanalAudioLabel.setLinespacing(0);
    CanalAudioLabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XIV0));
    add(CanalAudioLabel);

    homeAndBack1.setXY(0, 253);
    add(homeAndBack1);

    textArea1.setXY(446, 148);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ONNS));
    add(textArea1);

    textArea1_1.setXY(210, 148);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PBBT));
    add(textArea1_1);
}

EntradaMenuViewBase::~EntradaMenuViewBase()
{

}

void EntradaMenuViewBase::setupScreen()
{
    template1.initialize();
    homeAndBack1.initialize();
}

void EntradaMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ButtEntradaAudio)
    {
        //Interaction1
        //When ButtEntradaAudio clicked call virtual function
        //Call GFXInputAudio
        GFXInputAudio();
    }
    if (&src == &ButtCanalAudioIN)
    {
        //Interaction2
        //When ButtCanalAudioIN clicked call virtual function
        //Call GFXCanalSelecIN
        GFXCanalSelecIN();
    }
}

void EntradaMenuViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderBalance)
    {
        //Interaction4
        //When sliderBalance value changed call virtual function
        //Call GFXBalanceChange
        GFXBalanceChange(value);
    }
}
