/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/resetmenu_screen/ResetMenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ResetMenuViewBase::ResetMenuViewBase() :
    buttonCallback(this, &ResetMenuViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackGroundAndTitle.setPosition(0, 0, 480, 320);
    template1.setXY(0, 0);
    BackGroundAndTitle.add(template1);

    Title.setXY(67, 0);
    Title.setColor(touchgfx::Color::getColorFromRGB(255, 227, 216));
    Title.setLinespacing(0);
    Title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MPZM));
    BackGroundAndTitle.add(Title);

    ButtSi.setXY(106, 170);
    ButtSi.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtSi.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4I1H));
    ButtSi.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtSi.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtSi.setAction(buttonCallback);
    BackGroundAndTitle.add(ButtSi);

    ButtNo.setXY(275, 170);
    ButtNo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    ButtNo.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XQWZ));
    ButtNo.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtNo.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ButtNo.setAction(buttonCallback);
    BackGroundAndTitle.add(ButtNo);

    add(BackGroundAndTitle);

    homeAndBack1.setXY(0, 255);
    add(homeAndBack1);

    textArea1.setXY(106, 65);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CTOA));
    add(textArea1);

    textArea1_1.setXY(128, 84);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0YPJ));
    add(textArea1_1);
}

ResetMenuViewBase::~ResetMenuViewBase()
{

}

void ResetMenuViewBase::setupScreen()
{
    template1.initialize();
    homeAndBack1.initialize();
}

void ResetMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ButtNo)
    {
        //Interaction1
        //When ButtNo clicked change screen to Settings1
        //Go to Settings1 with no screen transition
        application().gotoSettings1ScreenNoTransition();
    }
    if (&src == &ButtSi)
    {
        //Interaction2
        //When ButtSi clicked call virtual function
        //Call ButtYesPress
        ButtYesPress();
        //Interaction3
        //When ButtSi clicked change screen to MainScreen
        //Go to MainScreen with no screen transition
        application().gotoMainScreenScreenNoTransition();
    }
}
